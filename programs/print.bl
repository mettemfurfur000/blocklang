    push message         ; push message pointer
    push CUR             ; push current address 
    jmp print            ; `call` a print function
    halt

print:
    ; rearrange args to free up all registers
    pop RG3             ; return addr
    ; args
    pop ACC             ; message ptr
    push RG3            ; put ret addr back
__print_loop:
    put RG0             ; save string pointer
    get REF             ; get a byte from the message label, overrides our pointer
    put DWN             ; put down what was here
    jez __print_ret     ; if \0 we end
    jof __print_ret     ; there might be an overflow issue with putting values to slots...
    get RG0             ; restore the pointer
    add 1               ; add 1
    jmp __print_loop    ; back 
__print_ret:
    pop ACC             ; pop return address to acc
    add 3               ; jmp <label> takes 2 bytes
    jmp ACC

message: 
."Test string to check printing"